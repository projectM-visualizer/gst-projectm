name: Ubuntu Linux (x86_64)

on:
  push:
      branches: 
        - "*"
      tags:
        - "*"
    
  pull_request:
      branches: 
        - "*"

jobs:
  build-projectm:
    name: Build ProjectM
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout ProjectM
        uses: actions/checkout@v4
        with:
          repository: 'projectM-visualizer/projectm'
          submodules: 'recursive'

      - name: Get ProjectM Git Hash
        id: git-hash
        run: echo "hash=$(git rev-parse HEAD)v2" >> $GITHUB_OUTPUT

      - name: Cache Install
        id: cache-install
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/install
          key: install-${{ runner.os }}-projectm-${{ steps.git-hash.outputs.hash }}

      - name: Install Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev mesa-common-dev libsdl2-dev libglm-dev llvm-dev libgtest-dev ninja-build
        if: steps.cache-install.outputs.cache-hit != 'true'

      - name: Configure Build
        run: cmake -G "Ninja" -S "${{ github.workspace }}" -B "${{ github.workspace }}/cmake-build" -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/install" -DCMAKE_VERBOSE_MAKEFILE=YES -DBUILD_SHARED_LIBS=ON -DENABLE_PLAYLIST=ON
        if: steps.cache-install.outputs.cache-hit != 'true'

      - name: Build Release
        run: cmake --build "${{ github.workspace }}/cmake-build" --config "Release" --parallel
        if: steps.cache-install.outputs.cache-hit != 'true'

      - name: Install
        run: |
          cmake --build "${{ github.workspace }}/cmake-build" --config "Release" --target install
        if: steps.cache-install.outputs.cache-hit != 'true'
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
            name: projectm-linux-shared-latest
            path: install/*

  build-plugin:
    name: Build GST Plugin ProjectM
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Wait for ProjectM
        uses: yogeshlonkar/wait-for-jobs@v0
        with:
          interval: '5000'
          jobs: Build ProjectM
          ttl: '15'

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: projectm-linux-shared-latest
          path: artifacts

      - name: Install Packages
        run: |
          ./setup.sh --auto

      - name: Configure Build
        run: cmake -G "Ninja" -S "${{ github.workspace }}" -B "${{ github.workspace }}/cmake-build" -DCMAKE_VERBOSE_MAKEFILE=YES -DprojectM4_DIR="artifacts/lib/cmake/projectM4"

      - name: Build Release
        id: build
        run: cmake --build "${{ github.workspace }}/cmake-build" --config "Release" --parallel

      - name: Test
        run: |
          GST_PLUGIN_PATH="${{ github.workspace }}/cmake-build" gst-inspect-1.0 projectm
        if: steps.build.outputs.return-code == 0

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
            name: gst-projectm-linux-latest
            path: ${{ github.workspace }}/cmake-build/libgstprojectm.so